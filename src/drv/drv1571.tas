
;GEOS 1571 disk driver
;reassembled by Maciej 'YTM/Elysium' Witkowiak
;25-26.02.2002, 2-4.03.2002

		    ;*=DISK_BASE

DriveAddy = $0300

_InitForIO		!word __InitForIO		;9000
_DoneWithIO		!word __DoneWithIO		;9002
_ExitTurbo		!word __ExitTurbo		;9004
_PurgeTurbo		!word __PurgeTurbo		;9006
_EnterTurbo		!word __EnterTurbo		;9008
_ChangeDiskDevice	!word __ChangeDiskDevice	;900a
_NewDisk		!word __NewDisk 		;900c
_ReadBlock		!word __ReadBlock		;900e
_WriteBlock		!word __WriteBlock		;9010
_VerWriteBlock		!word __VerWriteBlock		;9012
_OpenDisk		!word __OpenDisk		;9014
_GetBlock		!word __GetBlock		;9016
_PutBlock		!word __PutBlock		;9018
_GetDirHead		!word __GetDirHead		;901a
_PutDirHead		!word __PutDirHead		;901c
_GetFreeDirBlk		!word __GetFreeDirBlk		;901e
_CalcBlksFree		!word __CalcBlksFree		;9020
_FreeBlock		!word __FreeBlock		;9022
_SetNextFree		!word __SetNextFree		;9024
_FindBAMBit		!word __FindBAMBit		;9026
_NxtBlkAlloc		!word __NxtBlkAlloc		;9028
_BlkAlloc		!word __BlkAlloc		;902a
_ChkDkGEOS		!word __ChkDkGEOS		;902c
_SetGEOSDisk		!word __SetGEOSDisk		;902e

Get1stDirEntry		JMP _Get1stDirEntry		;9030
GetNxtDirEntry		JMP _GetNxtDirEntry		;9033
GetBorder		JMP _GetBorder			;9036
AddDirBlock		JMP _AddDirBlock		;9039
ReadBuff		JMP _ReadBuff			;903c
WriteBuff		JMP _WriteBuff			;903f
			JMP DUNK4_2			;9042
			JMP GetDOSError 		;9045
AllocateBlock		JMP _AllocateBlock		;9048
ReadLink		JMP _ReadLink			;904b


__GetDirHead	JSR SetDirHead_1		;904e
		JSR __GetBlock
		+bnex GDH_0
		LDY curDrive
		LDA curDirHead+3
		STA e88b7,y
		BPL GDH_0
		JSR SetDirHead_2
		JSR __GetBlock
		LDA #6
		BNE GDH_1
GDH_0		LDA #8				;906c
GDH_1		STA interleave			;906e
		RTS

_ReadBuff	+LoadW r4, diskBlkBuf		;9072
__GetBlock	JSR EnterTurbo			;907a
		BNE GetBlk0
		JSR InitForIO
		JSR ReadBlock
		JSR DoneWithIO
GetBlk0 	RTS				;9088

__PutDirHead	JSR EnterTurbo			;9089
		JSR InitForIO
		JSR SetDirHead_1
		JSR WriteBlock
		+bnex PDH_1
		LDY curDrive
		LDA curDirHead+3
		STA e88b7,y
		BPL PDH_0
		JSR SetDirHead_2
		JSR WriteBlock
		+bnex PDH_1
PDH_0		JSR SetDirHead_1		;90ac
		JSR VerWriteBlock
		+bnex PDH_1
		+bbrf 7, curDirHead+3, PDH_1
		JSR SetDirHead_2
		JSR VerWriteBlock
PDH_1		JMP DoneWithIO			;90c3

_WriteBuff	+LoadW r4, diskBlkBuf		;90c6
__PutBlock	JSR EnterTurbo			;90ce
		BNE PutBlk1
		JSR InitForIO
		JSR WriteBlock
		+bnex PutBlk0
		JSR VerWriteBlock
PutBlk0 	JSR DoneWithIO			;90df
PutBlk1 	RTS				;90e2

SetDirHead_1	LDY #$12			;90e3
		LDA #>curDirHead
		BNE SDH_1
SetDirHead_2	LDY #$35			;90e9
		LDA #>dir2Head
SDH_1		STY r1L				;90ed
		STA r4H
		LDA #0
		STA r1H
		STA r4L
		RTS

CheckParams	LDA #0				;90f8
		STA errCount
		LDX #INV_TRACK
		LDA r1L
		BEQ CheckParams_2
		CMP #$24
		BCC CheckParams_1
		LDY curDrive
		LDA e88b7,y
		BPL CheckParams_2
		LDA r1L
		CMP #$47
		BCS CheckParams_2
CheckParams_1	SEC				;9115
		RTS
CheckParams_2	CLC				;9117
		RTS

__OpenDisk					;9119
		JSR NewDisk
		+bnex OpenDsk1
		JSR GetDirHead
		+bnex OpenDsk1
		JSR SetCurDHVec
		JSR ChkDkGEOS
		+LoadW r4, curDirHead+OFF_DISK_NAME
		LDX #r5
		JSR GetPtrCurDkNm
		LDX #r4
		LDY #r5
		LDA #18
		JSR CopyFString
		LDX #0
OpenDsk1	RTS				;9143

__BlkAlloc					;9144
		LDY #1
		STY r3L
		DEY
		STY r3H
__NxtBlkAlloc	+PushW r9			;914b
		+PushW r3
		+LoadW r3, $00fe
		LDX #r2
		LDY #r3
		JSR Ddiv
		LDA r8L
		BEQ BlkAlc0
		INC r2L
		BNE *+4
		INC r2H
BlkAlc0 	JSR SetCurDHVec			;9170
		JSR CalcBlksFree
		+PopW r3
		LDX #INSUFF_SPACE
		+CmpW r2, r4
		BEQ BlkAlc1
		BCS BlkAlc4
BlkAlc1 	+MoveW r6, r4			;918c
		+MoveW r2, r5
BlkAlc2 	JSR SetNextFree 		;919c
		+bnex BlkAlc4
		LDY #0
		LDA r3L
		STA (r4),y
		INY
		LDA r3H
		STA (r4),y
		+AddVW 2, r4
BlkAlc2_1	LDA r5L				;91b8
		BNE *+4
		DEC r5H
		DEC r5L
		LDA r5L
		ORA r5H
		BNE BlkAlc2
		LDY #0
		TYA
		STA (r4),y
		INY
		LDA r8L
		BNE BlkAlc3
		LDA #$fe
BlkAlc3 	CLC				;91d2
		ADC #1
		STA (r4),y
		LDX #0
BlkAlc4 	+PopW r9			;91d9
		RTS

SetCurDHVec	+LoadW r5, curDirHead		;91e0
		RTS

_Get1stDirEntry					;91e9
		+LoadB r1L, 18
		LDY #1
		STY r1H
		DEY
		STY borderFlag
		BEQ GNDirEntry0

_GetNxtDirEntry 				;91f7
		LDX #0
		LDY #0
		+AddVW $20, r5
		+CmpWI r5, diskBlkBuf+$ff
		BCC GNDirEntry1
		LDY #$ff
		+MoveW diskBlkBuf, r1
		BNE GNDirEntry0
		LDA borderFlag
		BNE GNDirEntry1
		LDA #$ff
		STA borderFlag
		JSR GetBorder
		+bnex GNDirEntry1
		TYA
		BNE GNDirEntry1
GNDirEntry0	JSR ReadBuff			;9233
		LDY #0
		+LoadW r5, diskBlkBuf+FRST_FILE_ENTRY
GNDirEntry1	RTS				;9240

_GetBorder					;9241
		JSR GetDirHead
		+bnex GetBord2
		JSR SetCurDHVec
		JSR ChkDkGEOS
		BNE GetBord0
		LDY #$ff
		BNE GetBord1
GetBord0	+MoveW curDirHead+OFF_OP_TR_SC, r1	;9253
		LDY #0
GetBord1	LDX #0				;925f
GetBord2	RTS				;9261

__ChkDkGEOS					;9262
		LDY #OFF_GS_ID
		LDX #0
		STX isGEOS
ChkDkG0 	LDA (r5),y			;9269
		CMP GEOSDiskID,x
		BNE ChkDkG1
		INY
		INX
		CPX #11
		BNE ChkDkG0
		+LoadB isGEOS, $ff
ChkDkG1 	LDA isGEOS			;927b
		RTS

GEOSDiskID	!text "GEOS format V1.0",NULL	;927f

__GetFreeDirBlk 				;9290
		PHP
		SEI
		+PushB r6L
		+PushW r2
		LDX r10L
		INX
		STX r6L
		+LoadB r1L, 18
		+LoadB r1H, 1
GFDirBlk0	JSR ReadBuff			;92a8
GFDirBlk1	+bnex GFDirBlk5 		;92ab
		DEC r6L
		BEQ GFDirBlk3
GFDirBlk11	LDA diskBlkBuf			;92b2
		BNE GFDirBlk2
		JSR AddDirBlock
		+bra GFDirBlk1
GFDirBlk2	STA r1L 			;92bd
		+MoveB diskBlkBuf+1, r1H
		+bra GFDirBlk0
GFDirBlk3	LDY #FRST_FILE_ENTRY		;92c7
		LDX #0
GFDirBlk4	LDA diskBlkBuf,y		;9319
		BEQ GFDirBlk5
		TYA
		+addv $20
		TAY
		BCC GFDirBlk4
		+LoadB r6L, 1
		LDX #FULL_DIRECTORY
		LDY r10L
		INY
		STY r10L
		CPY #$12
		BCC GFDirBlk11
GFDirBlk5	+PopW r2			;92e6
		+PopB r6L
		PLP
		RTS

_AddDirBlock					;92f1
		+PushW r6
		LDY #$48
		LDX #FULL_DIRECTORY
		LDA curDirHead,y
		BEQ ADirBlk0
		+MoveW r1, r3
		JSR SetNextFree
		+MoveW r3, diskBlkBuf
		JSR WriteBuff
		+bnex ADirBlk0
		+MoveW r3, r1
		JSR ClearAndWrite
ADirBlk0	+PopW r6			;9326
		RTS

ClearAndWrite	LDA #0				;932d
		TAY
CAndWr0 	STA diskBlkBuf,y		;9330
		INY
		BNE CAndWr0
		DEY
		STY diskBlkBuf+1
		JMP WriteBuff

__SetNextFree					;933d
		LDA r3H
		+add interleave
		STA r6H
		+MoveB r3L, r6L
		CMP #DIR_TRACK
		BEQ SNxtFree1
		CMP #$35
		BEQ SNxtFree1
SNxtFree00	LDA r6L 			;9351
		CMP #DIR_TRACK
		BEQ SNxtFree3
		CMP #$35
		BEQ SNxtFree3
SNxtFree1	CMP #$24			;935b
		BCC SNxtFree11
		+addv $b9
		TAX
		LDA curDirHead,x
		BNE SNxtFree12
		BEQ SNxtFree3
SNxtFree11	ASL				;936a
		ASL
		TAX
		LDA curDirHead,x
		BEQ SNxtFree3
SNxtFree12	LDA r6L				;9372
		JSR SNxtFreeHelp
		LDA SecScTab,x
		STA r7L
		TAY
SNxtFree2	JSR SNxtFreeHelp2		;937d
		BEQ SNxtFreeEnd_OK
		INC r6H
		DEY
		BNE SNxtFree2
SNxtFree3	+bbrf 7, curDirHead+3, SNxtFree5 ;9387
		+CmpBI r6L, $24
		BCS SNxtFree4
		+addv $23
		STA r6L
		BNE SNxtFree7
SNxtFree4	+subv $22			;9399
		STA r6L
		BNE SNxtFree6
SNxtFree5	INC r6L				;93a0
		LDA r6L
SNxtFree6	CMP #$24			;93a4
		BCS SNxtFreeEnd_Err
SNxtFree7	+sub r3L			;93a8
		STA r6H
		ASL
		ADC #4
		ADC interleave
		STA r6H
		+bra SNxtFree00
SNxtFreeEnd_OK	+MoveW r6, r3			;93b8
		LDX #0
		RTS
SNxtFreeEnd_Err	LDX #INSUFF_SPACE		;93c3
		RTS

SNxtFreeHelp	PHA				;93c6
		CMP #$24
		BCC SNFHlp
		+subv $23
SNFHlp		LDX #0				;93ce
SNFHlp0 	CMP SecTrTab,x			;93d0
		BCC SNFHlp1
		INX
		BNE SNFHlp0
SNFHlp1 	PLA				;93d8
		RTS

SecTrTab	!byte 18, 25, 31, 36		;93da
SecScTab	!byte 21, 19, 18, 17		;93de

SNxtFreeHelp2	LDA r6H 			;93e2
SNFHlp2_1	CMP r7L 			;93e4
		BCC SNFHlp2_2
		+sub r7L
		+bra SNFHlp2_1
SNFHlp2_2	STA r6H 			;93ee

_AllocateBlock	JSR FindBAMBit			;93f0
		BNE AllBlk0
		LDX #BAD_BAM
		RTS
AllBlk0		PHP				;93f8
		+CmpBI r6L, $24
		BCC AllBlk1
		LDA r8H
		EOR dir2Head,x
		STA dir2Head,x
		+bra AllBlk2
AllBlk1		LDA r8H				;940a
		EOR curDirHead,x
		STA curDirHead,x
AllBlk2		LDX r7H				;9412
		PLP
		BEQ AllBlk3
		DEC curDirHead,x
		+bra AllBlk4
AllBlk3		INC curDirHead,x		;941d
AllBlk4		LDX #0				;9420
		RTS

__FreeBlock					;9423
		JSR FindBAMBit
		BEQ AllBlk0
		LDX #BAD_BAM
		RTS

__FindBAMBit					;942B
		LDA r6H
		AND #%00000111
		TAX
		LDA FBBBitTab,x
		STA r8H
		+CmpBI r6L, $24
		BCC FBB_0
		+subv $24
		STA r7H
		LDA r6H
		LSR
		LSR
		LSR
		CLC
		ADC r7H
		ASL r7H
		+add r7H
		TAX
		LDA r6L
		+addv $b9
		STA r7H
		LDA dir2Head,x
		AND r8H
		RTS
FBB_0		ASL				;945b
		ASL
		STA r7H
		LDA r6H
		LSR
		LSR
		LSR
		SEC
		ADC r7H
		TAX
		LDA curDirHead,x
		AND r8H
		RTS

FBBBitTab	!byte $01, $02, $04, $08	;946e
		!byte $10, $20, $40, $80

__CalcBlksFree					;9476
		+LoadW r4, 0
		LDY #OFF_TO_BAM
CBlksFre0	LDA (r5),y			;947e
		+add r4L
		STA r4L
		BCC *+4
		INC r4H
CBlksFre1	TYA				;9489
		+addv 4
		TAY
		CPY #$48
		BEQ CBlksFre1
		CPY #$90
		BNE CBlksFre0
		+LoadW r3, $0298
		+bbrf 7, curDirHead+3, CBlksFre4
		LDY #$DD
CBlksFre2	LDA (r5),y			;94a5
		+add r4L
		STA r4L
		BCC *+4
		INC r4H
CBlksFre3	INY				;94b0
		BNE CBlksFre2
		ASL r3L
		ROL r3H
CBlksFre4	RTS				;94b7

__SetGEOSDisk					;94b8
		JSR GetDirHead
		+bnex SetGDisk2
		JSR SetCurDHVec
		JSR CalcBlksFree
		LDX #INSUFF_SPACE
		LDA r4L
		ORA r4H
		BEQ SetGDisk2
		+LoadB r3L, DIR_TRACK+1
		+LoadB r3H, 0
		JSR SetNextFree
		+beqx SetGDisk0
		+LoadB r3L, 1
		JSR SetNextFree
		+bnex SetGDisk2
SetGDisk0	+MoveW r3, r1			;94e4
		JSR ClearAndWrite
		+bnex SetGDisk2
		+MoveW r1, curDirHead+OFF_OP_TR_SC
		LDY #OFF_GS_ID+15
		LDX #15
SetGDisk1	LDA GEOSDiskID,x		;9500
		STA curDirHead,y
		DEY
		DEX
		BPL SetGDisk1
		JSR PutDirHead
SetGDisk2	RTS				;950d

__InitForIO					;950e
		PHP
		PLA
		STA tmpPS
		SEI
		LDA CPU_DATA
		STA tmpCPU_DATA
		+LoadB CPU_DATA, KRNL_IO_IN
		LDA grirqen
		STA tmpgrirqen
		LDA clkreg
		STA tmpclkreg
		LDY #0
		STY clkreg
		STY grirqen
		LDA #%01111111
		STA grirq
		STA cia1base+13
		STA cia2base+13
		LDA #>D_IRQHandler
		STA irqvec+1
		LDA #<D_IRQHandler
		STA irqvec
		LDA #>D_NMIHandler
		STA nmivec+1
		LDA #<D_NMIHandler
		STA nmivec
		LDA #%00111111
		STA cia2base+2
		LDA mobenble
		STA tmpmobenble
		STY mobenble
		STY cia2base+5
		INY
		STY cia2base+4
		+LoadB cia2base+13, %10000001
		+LoadB cia2base+14, %00001001
		LDY #$2c
IniForIO0	LDA rasreg			;9571
		CMP TURBO_DD00_CPY
		BEQ IniForIO0
		STA TURBO_DD00_CPY
		DEY
		BNE IniForIO0
		LDA cia2base
		AND #%00000111
		STA TURBO_DD00
		ORA #%00110000
		STA TURBO_DD00_CPY
		LDA TURBO_DD00
		ORA #%00010000
		STA tmpDD00_2
		LDY #$1f
IniForIO1	LDA NibbleTab2,y		;9591
		AND #%11110000
		ORA TURBO_DD00
		STA NibbleTab2,y
		DEY
		BPL IniForIO1
		RTS

D_IRQHandler	PLA				;959f
		TAY
		PLA
		TAX
		PLA
D_NMIHandler	RTI				;95a4

__DoneWithIO	SEI				;95a5
		LDA tmpclkreg
		STA clkreg
		LDA tmpmobenble
		STA mobenble
		+LoadB cia2base+13, %01111111
		LDA cia2base+13
		LDA tmpgrirqen
		STA grirqen
		LDA tmpCPU_DATA
		STA CPU_DATA
		LDA tmpPS
		PHA
		PLP
		RTS

SendDOSCmd	STX z8c 			;95cb
		STA z8b
		+LoadB STATUS, 0
		LDA curDrive
		JSR $ffb1
		+bbsf 7, STATUS, SndDOSCmd1
		LDA #$ff
		JSR $ff93
		+bbsf 7, STATUS, SndDOSCmd1
		LDY #0
SndDOSCmd0	LDA (z8b),y			;95e8
		JSR $ffa8
		INY
		CPY #5
		BCC SndDOSCmd0
		LDX #0
		RTS
SndDOSCmd1	JSR $ffae			;95f5
		LDX #DEV_NOT_FOUND
		RTS

__EnterTurbo					;95fb
		LDA curDrive
		JSR SetDevice
		LDX curDrive
		LDA _turboFlags,x
		BMI EntTur0
		JSR SendCODE
		+bnex EntTur5
		LDX curDrive
		LDA #%10000000
		STA _turboFlags,x
EntTur0 	AND #%01000000			;9617
		BNE EntTur3
		JSR InitForIO
		LDX #>EnterCommand
		LDA #<EnterCommand
		JSR SendDOSCmd
		+bnex EntTur4
		JSR $ffae
		SEI
		LDY #$21
EntTur1 	DEY				;962e
		BNE EntTur1
		JSR Hst_RecvByte_3
EntTur2 	+bbsf 7, cia2base, EntTur2	;9634
		JSR DoneWithIO
		LDX curDrive
		LDA _turboFlags,x
		ORA #%01000000
		STA _turboFlags,x
EntTur3 	LDX #0				;9647
		BEQ EntTur5
EntTur4 	JSR DoneWithIO			;964b
EntTur5 	TXA				;964e
		RTS

EnterCommand	!text "M-E"			;9650
		!word DriveStart

SendExitTurbo	JSR InitForIO			;9655
		LDX #>Drv_ExitTurbo
		LDA #<Drv_ExitTurbo
		JSR DUNK4
		JSR GetSync
		LDA curDrive
		JSR $ffb1
		LDA #$ef
		JSR $ff93
		JSR $ffae
		JMP DoneWithIO

SendCODE	JSR InitForIO			;9673
		LDA #>DriveCode
		STA z8e
		LDA #<DriveCode
		STA z8d
		LDA #>DriveAddy
		STA WriteAddy+1
		LDA #<DriveAddy
		STA WriteAddy
	+LoadB z8f, $1f
SndCDE0 	JSR SendCHUNK			;968c
		+bnex SndCDE1
		CLC
		LDA #$20
		ADC z8d
		STA z8d
		BCC *+4
		INC z8e
		CLC
		LDA #$20
		ADC WriteAddy
		STA WriteAddy
		BCC *+5
		INC WriteAddy+1
		DEC z8f
		BPL SndCDE0
SndCDE1 	JMP DoneWithIO			;96af

SendCHUNK	LDX #>WriteCommand		;96b2
		LDA #<WriteCommand
		JSR SendDOSCmd
		+bnex SndCHNK2
		LDA #$20
		JSR $ffa8
		LDY #0
SndCHNK0	LDA (z8d),y			;96c3
		JSR $ffa8
		INY
		CPY #$20
		BCC SndCHNK0
		JSR $ffae
		LDX #0
SndCHNK2	RTS				;96d2

WriteCommand	!text "M-W"			;96d3
WriteAddy	!word $0300			;96d6

NibbleTab	!byte $0f, $07, $0d, $05, $0b, $03, $09, $01	;96d8
		!byte $0e, $06, $0c, $04, $0a, $02, $08, $00
NibbleTab2	!byte $05, $85, $25, $a5, $45, $c5, $65, $e5	;96e8
		!byte $15, $95, $35, $b5, $55, $d5, $75, $f5
E96F8		!byte $05, $25, $05, $25, $15, $35, $15, $35	;96f8
		!byte $05, $25, $05, $25, $15, $35, $15, $35

Hst_RecvByte	+PushB r0L			;9708
		JSR GetSync
		STY r0L
Hst_RecvByte_0	SEC				;9710
Hst_RecvByte_1	LDA rasreg			;9711
		SBC #$31
		BCC Hst_RecvByte_2
		AND #6
		BEQ Hst_RecvByte_1
Hst_RecvByte_2	+MoveB TURBO_DD00_CPY, cia2base ;971c
		+MoveB TURBO_DD00, cia2base
		DEC r0L
		LDA cia2base
		LSR
		LSR
		NOP
		ORA cia2base
		LSR
		LSR
		LSR
		LSR
		LDY cia2base
		TAX
		TYA
		LSR
		LSR
		ORA cia2base
		AND #%11110000
		ORA NibbleTab,x
		LDY r0L
e9746		STA (z8b),y
		ORA z8d
e974a		ORA z8d
		TYA
		BNE Hst_RecvByte_0
		JSR Hst_RecvByte_3
		+PopB r0L
		LDA (z8b),y
		RTS

Hst_RecvByte_3	LDX tmpDD00_2			;9758
		STX cia2base
		RTS

Hst_SendByte	JSR GetSync			;975f
		TYA
		PHA
		LDY #0
		JSR Hst_SendByte_01
		PLA
		TAY
e976b		JSR GetSync			;976b
Hst_SendByte_0	DEY				;976e
		LDA (z8b),y
		LDX TURBO_DD00
		STX cia2base
Hst_SendByte_01 TAX				;9776
		AND #%00001111
		STA z8d
		SEC
Hst_SendByte_1	LDA rasreg			;977c
		SBC #$31
		BCC Hst_SendByte_2
		AND #6
		BEQ Hst_SendByte_1
Hst_SendByte_2	TXA				;9787
		LDX TURBO_DD00_CPY
		STX cia2base
		AND #%11110000
		ORA TURBO_DD00
		STA cia2base
		ROR
		ROR
		AND #%11110000
		ORA TURBO_DD00
		STA cia2base
		LDX z8d
		LDA NibbleTab2,x
		STA cia2base
		LDA E96F8,X
		CPY #0
		STA cia2base
		BNE Hst_SendByte_0
		NOP
		NOP
		BEQ Hst_RecvByte_3

__ExitTurbo					;97b3
		+LoadB interleave, 8
		TXA
		PHA
		LDX curDrive
		LDA _turboFlags,x
		AND #%01000000
		BEQ ExiTur0
		JSR SendExitTurbo
		LDX curDrive
		LDA _turboFlags,x
		AND #%10111111
		STA _turboFlags,x
ExiTur0 	PLA				;97d2
		TAX
		RTS

__PurgeTurbo					;97d5
		JSR ExitTurbo
PurTur0	 	LDY curDrive			;97d8
		LDA #0
		STA _turboFlags,y
		RTS

DUNK4		STX z8c 			;97e1
		STA z8b
		LDY #2
		BNE DUNK4_3
DUNK4_1 	STX z8c 			;97e9
		STA z8b
DUNK4_2 	LDY #4				;97ed
		LDA r1H
		STA DTrkSec+1
		LDA r1L
		STA DTrkSec
DUNK4_3 	LDA z8c				;97f9
		STA DExeProc+1
		LDA z8b
		STA DExeProc
		LDA #>DExeProc
		STA z8c
		LDA #<DExeProc
		STA z8b
		JMP Hst_SendByte

DUNK5		LDY #1				;980e
		JSR Hst_RecvByte
		PHA
		TAY
		JSR Hst_RecvByte
		PLA
		TAY
		RTS

GetSync 	SEI				;981b
		+MoveB TURBO_DD00, cia2base
GetSync0	+bbrf 7, cia2base, GetSync0	;9821
		RTS

__ChangeDiskDevice				;9827
		PHA
		JSR EnterTurbo
		BNE ChngDskDv0
		PLA
		PHA
		ORA #%00100000
		STA r1L
		JSR InitForIO
		LDX #>Drv_ChngDskDev
		LDA #<Drv_ChngDskDev
		JSR DUNK4_1
		JSR DoneWithIO
		JSR PurTur0
		PLA
		TAX
		LDA #%11000000
		STA _turboFlags,x
		STX curDrive
		STX curDevice
		LDX #0
		RTS
ChngDskDv0	PLA				;9852
		RTS

__NewDisk					;9854
		JSR EnterTurbo
		BNE NewDsk2
		STA errCount
		STA r1L
		JSR InitForIO
NewDsk0 	LDX #>Drv_NewDisk		;9861
		LDA #<Drv_NewDisk
		JSR DUNK4_1
		JSR GetDOSError
		BEQ NewDsk1
		INC errCount
		CPY errCount
		BEQ NewDsk1
		BCS NewDsk0
NewDsk1 	JSR DoneWithIO			;9877
NewDsk2 	RTS				;987a

__ReadBlock
_ReadLink					;987b
		JSR CheckParams
		BCC RdLink1
RdLink0		JSR e990b			;9880
		JSR Hst_RecvByte
		JSR GetDError
		+beqx RdLink1
		INC errCount
		CPY errCount
		BEQ RdLink1
		BCS RdLink0
RdLink1		LDY #0				;9896
		RTS

__WriteBlock					;9899
		JSR CheckParams
		BCC WrBlock2
WrBlock1	LDX #>Drv_WriteSec		;989e
		LDA #<Drv_WriteSec
		JSR e990f
		JSR e976b
		JSR GetDError
		BEQ WrBlock2
		INC errCount
		CPY errCount
		BEQ WrBlock2
		BCS WrBlock1
WrBlock2	RTS				;98b7

__VerWriteBlock 				;98b8
		JSR CheckParams
		BCC VWrBlock3
		LDX #0
VWrBlock0	LDA #3				;98bf
		STA tryCount
VWrBlock1	JSR e990b			;98c4
		STY z8d
		LDA #$51
		STA e9746
		LDA #$85
		STA e974a
		JSR Hst_RecvByte
		LDA #$91
		STA e9746
		LDA #$05
		STA e974a
		+PushB z8d
		JSR GetDError
		PLA
		CPX #0
		BNE VWrBlock2
		TAX
		BEQ VWrBlock3
		LDX #$25
VWrBlock2	DEC tryCount			;98f0
		BNE VWrBlock1
		INC errCount
		LDA errCount
		CMP #5
		BEQ VWrBlock3
		PHA
		JSR WriteBlock
		PLA
		STA errCount
		+beqx VWrBlock0
VWrBlock3	RTS				;990a

e990b						;990b
		LDX #>Drv_ReadSec
		LDA #<Drv_ReadSec
e990f		JSR DUNK4_1			;990f
		+MoveW r4, z8b
		LDY #0
		RTS

GetDOSError	LDX #>Drv_SendByte_0		;991d
		LDA #<Drv_SendByte_0
		JSR DUNK4
GetDError	LDA #>errStore			;9924
		STA z8c
		LDA #<errStore
		STA z8b
		JSR DUNK5
		LDA errStore
		PHA
		TAY
		LDA DOSErrTab-1,y
		TAY
		PLA
		CMP #1
		BEQ GetDErr1
		+addv $1e
		BNE GetDErr2
GetDErr1	LDA #0				;9942
GetDErr2	TAX				;9944
		RTS

DOSErrTab	!byte $01, $05, $02, $08	;9946
		!byte $08, $01, $05, $01
		!byte $05, $05, $05

DriveCode					;9951
		!pseudopc DriveAddy {			; MEGA65_FIXED: !pseudopc now takes compound asm

DNibbleTab	!byte $0f, $07, $0d, $05	;0300
		!byte $0b, $03, $09, $01
		!byte $0e, $06, $0c, $04
		!byte $0a, $02, $08
						;0310
DNibbleTab2	!byte $00, $80, $20, $a0
		!byte $40, $c0, $60, $e0
		!byte $10, $90, $30, $b0
		!byte $50, $d0, $70, $f0

Drv_SendByte_0	LDY #0				;031f
		STY $73
		STY $74
		INY
		STY $71
		LDY #0
		JSR D_DUNK4_1
		LDA $71
		JSR Drv_SendByte_3
		LDY $71
Drv_SendByte_1	JSR D_DUNK4_1			;0334
Drv_SendByte_2	DEY				;0337
		LDA ($73),y
Drv_SendByte_3	TAX				;033a
		LSR
		LSR
		LSR
		LSR
		STA $70
		TXA
		AND #%00001111
		TAX
		LDA #4
		STA $1800
		BIT $1800
		BEQ *-3
		NOP
		NOP
		NOP
		NOP
		STX $1800
		JSR e03e0
		TXA
		ROL
		AND #%00001111
		STA $1800
		PHP
		PLP
		NOP
		NOP
		NOP
		LDX $70
		LDA DNibbleTab,x
		STA $1800
		JSR e03df
		ROL
		AND #%00001111
		CPY #0
		STA $1800
		JSR e03de
		BNE Drv_SendByte_2
		JSR e03da
		BEQ Drv_RecvByte_2

Drv_RecvWord	LDY #1				;0382
		JSR Drv_RecvByte
		STA $71
		TAY
		JSR Drv_RecvByte
		LDY $71
		RTS

Drv_RecvByte	JSR D_DUNK4_1			;0390
		JSR e03db
		LDA #0
		STA $70
Drv_RecvByte_1	EOR $70				;039a
		STA $70
		JSR e03db
		LDA #4
		BIT $1800
		BEQ *-3
		JSR e03dc
		LDA $1800
		JSR e03db
		ASL
		ORA $1800
		PHP
		PLP
		NOP
		NOP
		AND #%00001111
		TAX
		LDA $1800
		JSR e03de
		ASL
		ORA $1800
		AND #%00001111
		ORA DNibbleTab2,x
		DEY
		STA ($73),y
		BNE Drv_RecvByte_1
Drv_RecvByte_2	LDX #2				;03d0
		STX $1800
		JSR e03d9
		NOP
e03d9		NOP				;03d9
e03da		NOP				;03da
e03db		NOP				;03db
e03dc		NOP				;03dc
		NOP
e03de		NOP				;03de
e03df		NOP				;03df
e03e0		RTS				;03e0

D_DUNK4 	DEC $48 			;03e1
		BNE D_DUNK4_1
		JSR D_DUNK8_2
D_DUNK4_1	+LoadB $1805, $c0		;03e8
D_DUNK4_2	+bbrf 7, $1805, D_DUNK4 	;03ed
		LDA #4
		BIT $1800
		BNE D_DUNK4_2
		+LoadB $1800, 0
		RTS

DriveStart	PHP				;03ff
		SEI
		+PushB $49
		LDY #0
		DEY
		BNE *-1
		LDY #0
		DEY
		BNE *-1
		JSR e048e
		LDA $180f
		ORA #%00100000
		STA $180f
		JSR $a483
		+LoadB $1800, 0
		+LoadB $1802, $1a
		JSR Drv_RecvByte_2
		LDA #4
		BIT $1800
		BEQ *-3
DriveLoop	JSR D_DUNK8			;0430
		LDA #>DExecAddy
		STA $74
		LDA #<DExecAddy
		STA $73
		JSR Drv_RecvWord
		+MoveB e06f9, DDatas
		CMP #$24
		BCS Drv_Loop1
		LDA $180f
		AND #$fb
		STA $180f
		JMP Drv_Loop2
Drv_Loop1	SEC				;0453
		SBC #$23
		STA DDatas
		LDA $180f
		ORA #$04
		STA $180f
Drv_Loop2	JSR D_DUNK8_1			;0461
		+LoadW $73, $0700
		LDA #>(DriveLoop-1)
		PHA
		LDA #<(DriveLoop-1)
		PHA
		JMP (DExecAddy)	

Drv_ExitTurbo	JSR D_DUNK4_1			;0475
		+LoadB $33, 0
		JSR $f98f
		+LoadB $1c0c, $ec
		JSR e048e
		PLA
		PLA
		+PopB $49
		PLP
		RTS

e048e		LDA $180f			;048e
		AND #$df
		STA $180f
		JSR $a483
		JSR $ff82
		LDA $02af
		ORA #$80
		STA $02af
		RTS

Drv_ChngDskDev	LDA e06f9			;04a5
		STA $77
		EOR #$60
		STA $78
		RTS


Drv_ReadSec	JSR e062a			;04af
		LDY #0
		JSR Drv_SendByte_1
		JMP Drv_SendByte_0

D_DUNK8 	LDA #$f7			;04ba
		BNE D_DUNK8_3
D_DUNK8_1	LDA #$08			;04be
		ORA $1c00
		BNE D_DUNK8_5
D_DUNK8_2	+LoadB $20, 0			;04c5
		+LoadB $3e, $ff
		LDA #$fb
D_DUNK8_3	AND $1c00			;04cf
		JMP D_DUNK8_5
D_DUNK8_4	LDA $1c00			;04d5
		AND #$9f
		ORA DTrackTab,x
D_DUNK8_5	STA $1c00			;04dd
		RTS

DTrackTab	!byte $00, $20, $40, $60	;04e1

D_DUNK5 	JSR D_DUNK12			;04e5
		LDA $22
		BEQ D_DUNK5_1
		LDX $00
		DEX
		BEQ D_DUNK5_2
D_DUNK5_1	+PushB $12			;04f1
		+PushB $13
		JSR Drv_NewDisk_1
		+PopB $13
		TAX
		+PopB $12
		LDY $00
		CPY #$01
		BNE D_DUNK5_41
		CPX $17
		BNE D_DUNK5_5
		CMP $16
		BNE D_DUNK5_5
		LDA #0
D_DUNK5_2	PHA				;0511
		LDA $22
		LDX #$ff
		SEC
		SBC DDatas
		BEQ D_DUNK5_4
		BCS D_DUNK5_3
		EOR #$ff
		ADC #1
		LDX #1
D_DUNK5_3	JSR D_DUNK6			;0524
		LDA DDatas
		STA $22
		JSR Drv_NewDisk_5
D_DUNK5_4	PLA				;052f
D_DUNK5_41	RTS				;0530
D_DUNK5_5	+LoadB $00, $0b 		;0531
		RTS

D_DUNK6 	STX $4a 			;0536
		ASL
		TAY
		LDA $1c00
		AND #$fe
		STA $70
		LDA #$2f
		STA $71
D_DUNK6_1	LDA $70 			;0545
		+add $4a
		EOR $70
		AND #%00000011
		EOR $70
		STA $70
		STA $1c00
		LDA $71
		JSR D_DUNK6_4
		CPY #6
		BCC D_DUNK6_2
		CMP #$1b
		BCC D_DUNK6_3
		SBC #3
		BNE D_DUNK6_3
D_DUNK6_2	CMP #$2f			;0566
		BCS D_DUNK6_3
		ADC #4
D_DUNK6_3	STA $71 			;056c
		DEY
		BNE D_DUNK6_1
		LDA #$96
D_DUNK6_4	PHA				;0573
		STA $1805
		LDA $1805
		BNE *-3
		PLA
		RTS

Drv_NewDisk 	JSR D_DUNK12			;057e
Drv_NewDisk_1	LDX $00 			;0581
		DEX
		BEQ Drv_NewDisk_2
		LDX #$ff
		LDA #$01
		JSR D_DUNK6
		LDX #$01
		TXA
		JSR D_DUNK6
		LDA #$ff
		JSR D_DUNK6_4
		JSR D_DUNK6_4
Drv_NewDisk_2	+LoadB $70, $04 		;059b
Drv_NewDisk_3	JSR D_DUNK11			;059f
		LDA $18
		CMP #$24
		BCC Drv_NewDisk_30
		SBC #$23
Drv_NewDisk_30	STA $22				;05aa
		LDY $00
		DEY
		BEQ Drv_NewDisk_5
		DEC $70
		BMI Drv_NewDisk_4
		LDX $70
		JSR D_DUNK8_4
		SEC
		BCS Drv_NewDisk_3
Drv_NewDisk_4	+LoadB $22, 0			;05bd
		RTS
Drv_NewDisk_5	JSR $f24b			;05c2
		STA $43
		JMP D_DUNK8_4

D_DUNK9 	TAX				;05ca
		+bbrf 7, e06f5, D_DUNK9_0
		JSR D_DUNK12_1
		LDX #0
		STX e06f5
D_DUNK9_0	CPX $22 			;05d8
		BEQ D_DUNK9_1
		JSR Drv_NewDisk_2
		CMP #1
		BNE D_DUNK9_1
		LDY $19
		INY
		CPY $43
		BCC *+4
		LDY #0
		STY $19
		+LoadB $45, 0
		+LoadW $32, $0018
		JSR D_DUNK11_1
D_DUNK9_1	RTS				;05fd

Drv_WriteSec	JSR D_DUNK5			;05fe
		LDX $00
		DEX
		BNE D_DUNK10_1
		JSR D_DUNK9
D_DUNK10_1	LDY #0				;0609
		JSR Drv_RecvByte
		EOR $70
		STA $3a
		LDY $0
		DEY
		BNE Drv_WriteSec_1
		LDA $1c00
		AND #$10
		BNE Drv_WriteSec_1
		+LoadB $00, 8
Drv_WriteSec_1	JSR Drv_SendByte_0		;0622
		LDA #$10
		JMP e062f

e062a		JSR D_DUNK5			;062a
		LDA #0
e062f		LDX $00				;062f
		DEX
		BEQ D_DUNK11_0
		RTS

D_DUNK11	LDA #$30			;0635
D_DUNK11_0	STA $45 			;0637
		LDA #>e06f9
		STA $33
		LDA #<e06f9
		STA $32
D_DUNK11_1	+LoadB $31, 7			;0641
		TSX
		STX $49
		LDX #1
		STX $00
		DEX
		STX $02ab
		STX $02fe
		STX $3f
		+LoadB $1c0c, $ee
		LDA $45
		CMP #$10
		BEQ D_DUNK11_3
		CMP #$30
		BEQ D_DUNK11_2
		JMP $9606
D_DUNK11_2	JMP $944f			;0667
D_DUNK11_3	JSR $f78f			;066a
		JSR $970f
		LDY #9
D_DUNK11_4	BIT $180f			;0672
		BMI D_DUNK11_4
		BIT $1c00
		DEY
		BNE D_DUNK11_4
		LDA #$ff
		STA $1c03
		LDA $1c0c
		AND #$1f
		ORA #$c0
		STA $1c0c
		LDA #$ff
		LDY #5
		STA $1c01
D_DUNK11_5	BIT $180f			;0693
		BMI D_DUNK11_5
		BIT $1c00
		DEY
		BNE D_DUNK11_5
		LDY #$bb
D_DUNK11_7	LDA $0100,y			;06a0
		BIT $180f
		BMI *-3
		STA $1c01
		INY
		BNE D_DUNK11_7
D_DUNK11_8	LDA ($30),y			;06ae
		BIT $180f
		BMI *-3
		STA $1c01
		INY
		BNE D_DUNK11_8
		BIT $180f
		BMI *-3
		LDA $1c0c
		ORA #$e0
		STA $1c0c
		+LoadB $1c03, 0
		STA $50
		LDA #1
		STA $00
		RTS

D_DUNK12	LDA $20 			;06d4
		AND #$20
		BNE D_DUNK12_3
		JSR $f97e
		LDA #$ff
		STA e06f5
D_DUNK12_1	LDY #$c8			;06e2
D_DUNK12_2	DEX				;06e4
		BNE D_DUNK12_2
		DEY
		BNE D_DUNK12_2
		STY $3e
		+LoadB $20, $20
D_DUNK12_3	+LoadB $48, $ff 		;0645
		RTS

e06f5		!byte 0				;06f5
DDatas		!byte 0				;06f6
DExecAddy	!word 0				;06f7
e06f9		!word 0				;06f9

; MEGA65_FIXED: !realpc obsolete now with !pseudopc compound asm ( {} )
};		!realpc

tmpclkreg	!byte 0				;9d4c
tmpPS 		!byte 0				;9d4d
tmpgrirqen	!byte 0		 		;9d4e
tmpCPU_DATA	!byte 0				;9d4f
tmpmobenble	!byte 0				;9d50
		!byte 0
DExeProc	!word 0				;9d52
DTrkSec		!word 0				;9d54
tmpDD00_2	!byte 0				;9d56
errCount 	!byte 0				;9d57
errStore	!byte 0				;9d58
tryCount	!byte 0				;9d59
borderFlag 	!byte 0				;9d5a

