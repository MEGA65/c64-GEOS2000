
;GEOS 1581 disk driver
;reassembled by Maciej 'YTM/Elysium' Witkowiak
;31.08-3.09.2001

		;*=DISK_BASE

DriveAddy = $0300

dir3Head	= $9c80

_InitForIO		!word __InitForIO		;9000
_DoneWithIO		!word __DoneWithIO		;9002
_ExitTurbo		!word __ExitTurbo		;9004
_PurgeTurbo		!word __PurgeTurbo		;9006
_EnterTurbo		!word __EnterTurbo		;9008
_ChangeDiskDevice	!word __ChangeDiskDevice	;900a
_NewDisk		!word __NewDisk 		;900c
_ReadBlock		!word __ReadBlock		;900e
_WriteBlock		!word __WriteBlock		;9010
_VerWriteBlock		!word __VerWriteBlock		;9012
_OpenDisk		!word __OpenDisk		;9014
_GetBlock		!word __GetBlock		;9016
_PutBlock		!word __PutBlock		;9018
_GetDirHead		!word __GetDirHead		;901a
_PutDirHead		!word __PutDirHead		;901c
_GetFreeDirBlk		!word __GetFreeDirBlk		;901e
_CalcBlksFree		!word __CalcBlksFree		;9020
_FreeBlock		!word __FreeBlock		;9022
_SetNextFree		!word __SetNextFree		;9024
_FindBAMBit		!word __FindBAMBit		;9026
_NxtBlkAlloc		!word __NxtBlkAlloc		;9028
_BlkAlloc		!word __BlkAlloc		;902a
_ChkDkGEOS		!word __ChkDkGEOS		;902c
_SetGEOSDisk		!word __SetGEOSDisk		;902e

Get1stDirEntry		JMP _Get1stDirEntry		;9030
GetNxtDirEntry		JMP _GetNxtDirEntry		;9033
GetBorder		JMP _GetBorder			;9036
AddDirBlock		JMP _AddDirBlock		;9039
ReadBuff		JMP _ReadBuff			;903c
WriteBuff		JMP _WriteBuff			;903f
			JMP DUNK4_2			;9042
			JMP GetDOSError 		;9045
AllocateBlock		JMP _AllocateBlock		;9048
ReadLink		JMP _ReadLink			;904b

E904E			!byte $03			;904e

__GetDirHead	JSR SetDirHead_1		;904f
		JSR __GetBlock
		BNE GDH_0
		JSR SetDirHead_2
		JSR __GetBlock
		BNE GDH_0
		JSR SetDirHead_3
		BNE __GetBlock
GDH_0		RTS				;9064

_ReadBuff	+LoadW r4, diskBlkBuf		;9065
__GetBlock	JSR EnterTurbo			;906d
		BNE GetBlk0
		JSR InitForIO
		JSR ReadBlock
		JSR DoneWithIO
GetBlk0 	TXA
		RTS

__PutDirHead					;907d
		JSR SetDirHead_1
		JSR __PutBlock
		BNE PDH_0
		JSR SetDirHead_2
		JSR __PutBlock
		BNE PDH_0
		JSR SetDirHead_3
		BNE __PutBlock
PDH_0		RTS				;9092

_WriteBuff	+LoadW r4, diskBlkBuf		;9093
__PutBlock	JSR EnterTurbo			;909b
		BNE PutBlk1
		JSR InitForIO
		JSR WriteBlock
		+bnex PutBlk0
		JSR VerWriteBlock
PutBlk0 	JSR DoneWithIO			;90ac
PutBlk1 	TXA				;90af
		RTS

SetDirHead_1	LDX #>curDirHead		;90b1
		LDY #<curDirHead
		LDA #0
		BEQ SDH_1
SetDirHead_2	LDX #>dir2Head			;90b9
		LDY #<dir2Head
		LDA #1
		BNE SDH_1
SetDirHead_3	LDX #>dir3Head			;90c1
		LDY #<dir3Head
		LDA #2
SDH_1		STX r4H				;90c7
		STY r4L
		STA r1H
		LDA #DIR_1581_TRACK		;MEGA65_FIXED
		STA r1L
		RTS

CheckParams	+bbrf 6, curType, CheckParams_1	;90d2
		JSR DoCacheVerify
		BEQ CheckParams_2
CheckParams_1 	LDA #0				;90dc
		STA errCount
		LDX #INV_TRACK
		LDA r1L
		BEQ CheckParams_2
		CMP #81
		BCS CheckParams_2
		SEC
		RTS
CheckParams_2 	CLC				;90ed
		RTS

__OpenDisk					;90ba
		LDY curDrive
		LDA _driveType,y
		STA tmpDriveType
		AND #%10111111
		STA _driveType,y
		JSR NewDisk
		+bnex OpenDsk1
		JSR GetDirHead
		+bnex OpenDsk1
		+bbrf 6, tmpDriveType, OpenDsk10
		JSR SetDirHead_1
		JSR DoCacheVerify
		BNE OpenDsk0
		JSR SetDirHead_2
		JSR DoCacheVerify
		BEQ OpenDsk10
OpenDsk0	JSR DoClearCache		;911e
		JSR SetDirHead_1
		JSR DoCacheWrite
		JSR SetDirHead_2
		JSR DoCacheWrite
		JSR SetDirHead_3
		JSR DoCacheWrite
OpenDsk10	JSR SetCurDHVec			;9133

		JSR ChkDkGEOS
		+LoadW r4, curDirHead+OFF_DISK_NAME
		LDX #r5
		JSR GetPtrCurDkNm
		LDX #r4
		LDY #r5
		LDA #18
		JSR CopyFString
		LDX #0
OpenDsk1	LDY curDrive			;910a
		LDA tmpDriveType
		STA _driveType,y
		RTS

__BlkAlloc					;915b
		+PopW r3			;!!!hint???
		+PushW r3
		+SubW SaveFile+1, r3
		LDY #$27
		LDA r3H
		BEQ E917E
		LDY #$23
E917E		STY r3L				;917e
		LDY #0
		STY r3H
		LDA #2
		BNE E918A
__NxtBlkAlloc	LDA #0				;9188
E918A		STA E9C64			;918a

		+PushW r9
		+PushW r3
		+LoadW r3, $00fe
		LDX #r2
		LDY #r3
		JSR Ddiv
		LDA r8L
		BEQ BlkAlc0
		INC r2L
		BNE *+4
		INC r2H
BlkAlc0 	JSR SetCurDHVec			;91b2
		JSR CalcBlksFree
		+PopW r3
		LDX #INSUFF_SPACE
		+CmpW r2, r4
		BEQ BlkAlc1
		BCS BlkAlc4
BlkAlc1 	+MoveW r6, r4			;91ce
		+MoveW r2, r5
BlkAlc2 	JSR SetNextFree 		;91de
		+bnex BlkAlc4
		LDY #0
		LDA r3L
		STA (r4),y
		INY
		LDA r3H
		STA (r4),y
		+AddVW 2, r4
		LDA E9C64
		BEQ BlkAlc2_1
		DEC E9C64
		BNE BlkAlc2_1
		+LoadB r3L, $23
BlkAlc2_1	LDA r5L				;9208
		BNE *+4
		DEC r5H
		DEC r5L
		LDA r5L
		ORA r5H
		BNE BlkAlc2
		LDY #0
		TYA
		STA (r4),y
		INY
		LDA r8L
		BNE BlkAlc3
		LDA #$fe
BlkAlc3 	CLC				;9222
		ADC #1
		STA (r4),y
		LDX #0
BlkAlc4 	+PopW r9			;9229
		RTS

SetCurDHVec	+LoadW r5, curDirHead		;9230
		RTS

_Get1stDirEntry					;9239
		JSR SetDirHead_3
		INC r1H
		+LoadB borderFlag, 0
		BEQ GNDirEntry0

_GetNxtDirEntry 				;9245
		LDX #0
		LDY #0
		+AddVW $20, r5
		+CmpWI r5, diskBlkBuf+$ff
		BCC GNDirEntry1
		LDY #$ff
		+MoveW diskBlkBuf, r1
		BNE GNDirEntry0
		LDA borderFlag
		BNE GNDirEntry1
		LDA #$ff
		STA borderFlag
		JSR GetBorder
		+bnex GNDirEntry1
		TYA
		BNE GNDirEntry1
GNDirEntry0	JSR ReadBuff			;9281
		LDY #0
		+LoadW r5, diskBlkBuf+FRST_FILE_ENTRY
GNDirEntry1	RTS				;928e

_GetBorder					;928f
		JSR GetDirHead
		+bnex GetBord2
		JSR SetCurDHVec
		JSR ChkDkGEOS
		BNE GetBord0
		LDY #$ff
		BNE GetBord1
GetBord0	+MoveW curDirHead+OFF_OP_TR_SC, r1	;92a1
		LDY #0
GetBord1	LDX #0				;92ad
GetBord2	RTS				;92af

__ChkDkGEOS					;92b0
		LDY #OFF_GS_ID
		LDX #0
		STX isGEOS
ChkDkG0 	LDA (r5),y			;92b7
		CMP GEOSDiskID,x
		BNE ChkDkG1
		INY
		INX
		CPX #11
		BNE ChkDkG0
		+LoadB isGEOS, $ff
ChkDkG1 	LDA isGEOS			;92c9
		RTS

GEOSDiskID	!text "GEOS format V1.0",NULL	;92cd

__GetFreeDirBlk 				;92de
		PHP
		SEI
		+PushB r6L
		+PushW r2
		LDX r10L
		INX
		STX r6L
		+LoadB r1L, DIR_1581_TRACK
		+LoadB r1H, 3
GFDirBlk0	JSR ReadBuff			;92f6
GFDirBlk1	+bnex GFDirBlk5 		;92f9
		DEC r6L
		BEQ GFDirBlk3
GFDirBlk11	LDA diskBlkBuf			;9300
		BNE GFDirBlk2
		JSR AddDirBlock
		+bra GFDirBlk1
GFDirBlk2	STA r1L 			;930b
		+MoveB diskBlkBuf+1, r1H
		+bra GFDirBlk0
GFDirBlk3	LDY #FRST_FILE_ENTRY		;9315
		LDX #0
GFDirBlk4	LDA diskBlkBuf,y		;9319
		BEQ GFDirBlk5
		TYA
		+addv $20
		TAY
		BCC GFDirBlk4
		+LoadB r6L, 1
		LDX #FULL_DIRECTORY
		LDY r10L
		INY
		STY r10L
		CPY #$12
		BCC GFDirBlk11
GFDirBlk5	+PopW r2			;9334
		+PopB r6L
		PLP
		RTS

_AddDirBlock					;933f
		+PushW r6
		LDX #4
		LDA dir2Head+$fa
		BEQ ADirBlk0
		+MoveW r1, r3
		JSR SetNextFree
		+MoveW r3, diskBlkBuf
		JSR WriteBuff
		+bnex ADirBlk0
		+MoveW r3, r1
		JSR ClearAndWrite
ADirBlk0	+PopW r6			;9372
		RTS

ClearAndWrite	LDA #0				;9379
		TAY
CAndWr0 	STA diskBlkBuf,y		;937c
		INY
		BNE CAndWr0
		DEY
		STY diskBlkBuf+1
		JMP WriteBuff

__SetNextFree					;9389
		JSR SNF_1
		BNE SNF_0
		RTS
SNF_0		+LoadB r3L, $27			;938f
SNF_1		LDA r3H				;9393
		+addv 1
		STA r6H
		+MoveB r3L, r6L
		CMP #DIR_1581_TRACK
		BEQ SNF_3
SNF_2		LDA r6L				;93a2
		CMP #DIR_1581_TRACK
		BEQ SNF_8
SNF_3		CMP #DIR_1581_TRACK+1		;93a8
		BCC SNF_4
		+subv DIR_1581_TRACK
SNF_4		+subv $01			;93af
		ASL
		STA r7L
		ASL
		CLC
		ADC r7L
		TAX
		+CmpBI r6L, DIR_1581_TRACK+1
		BCC SNF_5
		LDA dir3Head+$10,x
		+bra SNF_6
SNF_5		LDA dir2Head+$10,x		;93c6
SNF_6		BEQ SNF_8			;93c9
		+LoadB r7L, DIR_1581_TRACK
		TAY
SNF_7		JSR SNxtFreeHelp		;93d0
		BEQ SNF_11
		INC r6H
		DEY
		BNE SNF_7
SNF_8		+CmpBI r6L, DIR_1581_TRACK+1			;93da
		BCS SNF_9
		DEC r6L
		BNE SNF_10
		+LoadB r6L, DIR_1581_TRACK+1
		BNE SNF_10
SNF_9		INC r6L				;93ea
SNF_10		+CmpBI r6L, $51			;93ec
		BCS SNF_12
		+LoadB r6H, 0
		BEQ SNF_2
SNF_11		+MoveW r6, r3			;93f8
		LDX #0
		RTS
SNF_12		LDX #INSUFF_SPACE		;9403
		RTS

SNxtFreeHelp	LDA r6H 			;9406
SNFHlp_1	CMP r7L 			;9408
		BCC SNFHlp_2
		+sub r7L
		+bra SNFHlp_1
SNFHlp_2	STA r6H 			;9412

_AllocateBlock	JSR FindBAMBit			;9414
		BNE AllBlk_0
		LDX #BAD_BAM
		RTS
AllBlk_0	PHP				;941c
		+CmpBI r6L, DIR_1581_TRACK+1
		BCC AllBlk_2
		LDA r8H
		EOR dir3Head+$10,x
		STA dir3Head+$10,x
		LDX r7H
		PLP
		BEQ AllBlk_1
		DEC dir3Head+$10,x
		+bra AllBlk_4
AllBlk_1	INC dir3Head+$10,x		;9436
		+bra AllBlk_4
AllBlk_2	LDA r8H				;943c
		EOR dir2Head+$10,x
		STA dir2Head+$10,x
		LDX r7H
		PLP
		BEQ AllBlk_3
		DEC dir2Head+$10,x
		+bra AllBlk_4
AllBlk_3	INC dir2Head+$10,x		;944f
AllBlk_4	LDX #0				;9452
		RTS

__FreeBlock	JSR FindBAMBit			;9455
		BEQ AllBlk_0
		LDX #BAD_BAM
		RTS

__FindBAMBit					;945d
		LDA r6H
		AND #%00000111
		TAX
		LDA FBBBitTab,x
		STA r8H
		+CmpBI r6L, DIR_1581_TRACK+1
		BCC FBB_1
		+subv DIR_1581_TRACK
FBB_1		+subv $1
		ASL
		STA r7H
		ASL
		+add r7H
		STA r7H
		LDA r6H
		LSR
		LSR
		LSR
		SEC
		ADC r7H
		TAX
		+CmpBI r6L, DIR_1581_TRACK+1
		BCC FBB_2
		LDA dir3Head+$10,x
		AND r8H
		RTS
FBB_2		LDA dir2Head+$10,x
		AND r8H
		RTS
		
FBBBitTab	!byte $01, $02, $04, $08	;9497
		!byte $10, $20, $40, $80

__CalcBlksFree					;949f
		+LoadW r4, 0
		LDY #$10
CBlksFre0	LDA dir2Head,y			;94a7
		+add r4L
		STA r4L
		BCC *+4
		INC r4H
CBlksFre1	TYA				;94b3
		+addv 6
		TAY
		CPY #$FA
		BEQ CBlksFre1
		CPY #$00
		BNE CBlksFre0
		LDY #$10
CBlksFre2	LDA dir3Head,y			;94c2
		+add r4L
		STA r4L
		BCC *+4
		INC r4H
CBlksFre3	TYA				;94ce
		+addv 6
		TAY
		BNE CBlksFre2
		+LoadW r3, $0c58
		RTS

__SetGEOSDisk					;94de
		JSR GetDirHead
		+bnex SetGDisk2
		JSR SetCurDHVec
		JSR CalcBlksFree
		LDX #INSUFF_SPACE
		LDA r4L
		ORA r4H
		BEQ SetGDisk2
		+LoadB r3L, DIR_1581_TRACK
		+LoadB r3H, $12
		JSR SetNextFree
		+bnex SetGDisk2
		+MoveW r3, r1
		JSR ClearAndWrite
		+bnex SetGDisk2
		+MoveW r1, curDirHead+OFF_OP_TR_SC
		LDY #OFF_GS_ID+15
		LDX #15
SetGDisk1	LDA GEOSDiskID,x		;951c
		STA curDirHead,y
		DEY
		DEX
		BPL SetGDisk1
		JSR PutDirHead
SetGDisk2	RTS				;9529


__InitForIO					;95c6
		PHP
		PLA
		STA tmpPS
		SEI
		LDA CPU_DATA
		STA tmpCPU_DATA
		+LoadB CPU_DATA, KRNL_IO_IN
		LDA grirqen
		STA tmpgrirqen
		LDA clkreg
		STA tmpclkreg
		LDY #0
		STY clkreg
		STY grirqen
		LDA #%01111111
		STA grirq
		STA cia1base+13
		STA cia2base+13
		LDA #>D_IRQHandler
		STA irqvec+1
		LDA #<D_IRQHandler
		STA irqvec
		LDA #>D_NMIHandler
		STA nmivec+1
		LDA #<D_NMIHandler
		STA nmivec
		LDA #%00111111
		STA cia2base+2
		LDA mobenble
		STA tmpmobenble
		STY mobenble
		STY cia2base+5
		INY
		STY cia2base+4
		+LoadB cia2base+13, %10000001
		+LoadB cia2base+14, %00001001
		LDY #$2c
IniForIO0	LDA rasreg			;958d
		CMP TURBO_DD00_CPY
		BEQ IniForIO0
		STA TURBO_DD00_CPY
		DEY
		BNE IniForIO0
		LDA cia2base
		AND #%00000111
		STA TURBO_DD00
		ORA #%00110000
		STA TURBO_DD00_CPY
		LDA TURBO_DD00
		ORA #%00010000
		STA tmpDD00
		LDY #$1f
IniForIO1	LDA NibbleTab2,y		;95ad
		AND #$f0
		ORA TURBO_DD00
		STA NibbleTab2,y
		DEY
		BPL IniForIO1
		RTS

D_IRQHandler	PLA				;95bb
		TAY
		PLA
		TAX
		PLA
D_NMIHandler	RTI				;95c0

__DoneWithIO	SEI				;95c1
		LDA tmpclkreg
		STA clkreg
		LDA tmpmobenble
		STA mobenble
		+LoadB cia2base+13, %01111111
		LDA cia2base+13
		LDA tmpgrirqen
		STA grirqen
		LDA tmpCPU_DATA
		STA CPU_DATA
		LDA tmpPS
		PHA
		PLP
		RTS

SendDOSCmd	STX z8c 			;95e7
		STA z8b
		+LoadB STATUS, 0
		LDA curDrive
		JSR $ffb1
		+bbsf 7, STATUS, SndDOSCmd1
		LDA #$ff
		JSR $ff93
		+bbsf 7, STATUS, SndDOSCmd1
		LDY #0
SndDOSCmd0	LDA (z8b),y			;9604
		JSR $ffa8
		INY
		CPY #5
		BCC SndDOSCmd0
		LDX #0
		RTS
SndDOSCmd1	JSR $ffae			;9611
		LDX #DEV_NOT_FOUND
		RTS

__EnterTurbo					;9617
		LDA curDrive
		JSR SetDevice
		LDX curDrive
		LDA _turboFlags,x
		BMI EntTur0
		JSR SendCODE
		+bnex EntTur5
		LDX curDrive
		LDA #%10000000
		STA _turboFlags,x
EntTur0 	AND #%01000000			;9633
		BNE EntTur3
		JSR InitForIO
		LDX #>EnterCommand
		LDA #<EnterCommand
		JSR SendDOSCmd
		+bnex EntTur4
		JSR $ffae
		SEI
		LDY #$21
EntTur1 	DEY				;964a
		BNE EntTur1
		JSR Hst_RecvByte_3
EntTur2 	+bbsf 7, cia2base, EntTur2	;9650
		JSR DoneWithIO
		LDX curDrive
		LDA _turboFlags,x
		ORA #%01000000
		STA _turboFlags,x
EntTur3 	LDX #0				;9663
		BEQ EntTur5
EntTur4 	JSR DoneWithIO			;9667
EntTur5 	TXA				;966a
		RTS

EnterCommand	!text "M-E"			;966c
		!word DriveStart

SendExitTurbo	JSR InitForIO			;9671
		LDX #>Drv_ExitTurbo
		LDA #<Drv_ExitTurbo
		JSR DUNK4
		LDX #>E0457
		LDA #<E0457
		JSR DUNK4
		JSR GetSync
E9685		LDA curDrive
		JSR $ffb1
		LDA #$ef
		JSR $ff93
		JSR $ffae
		LDX #0
		JMP DoneWithIO

SendCODE	JSR InitForIO			;9698
		LDA #>DriveCode
		STA z8e
		LDA #<DriveCode
		STA z8d
		LDA #>DriveAddy
		STA WriteAddy+1
		LDA #<DriveAddy
		STA WriteAddy
	+LoadB z8f, $0f
SndCDE0 	JSR SendCHUNK			;96b1
		+bnex SndCDE1
		CLC
		LDA #$20
		ADC z8d
		STA z8d
		BCC *+4
		INC z8e
		CLC
		LDA #$20
		ADC WriteAddy
		STA WriteAddy
		BCC *+5
		INC WriteAddy+1
		DEC z8f
		BPL SndCDE0
SndCDE1 	JMP DoneWithIO			;96d4

SendCHUNK	LDX #>WriteCommand		;96d7
		LDA #<WriteCommand
		JSR SendDOSCmd
		+bnex SndCHNK2
		LDA #$20
		JSR $ffa8
		LDY #0
SndCHNK0	LDA (z8d),y			;96e8
		JSR $ffa8
		INY
		CPY #$20
		BCC SndCHNK0
		JSR $ffae
		LDX #0
SndCHNK2	RTS				;96f7

WriteCommand	!text "M-W"			;96f8
WriteAddy	!word $0300			;96fb

__ExitTurbo					;96fd
		TXA
		PHA
		LDX curDrive
		LDA _turboFlags,x
		AND #%01000000
		BEQ ExiTur0
		JSR SendExitTurbo
		LDX curDrive
		LDA _turboFlags,x
		AND #%10111111
		STA _turboFlags,x
		+bbrf 6, sysRAMFlg, ExiTur0
		JSR E9C4A
		LDX curDrive
		LDA E9746-8, x
		STA r1L
		LDA E974A-8, x
		STA r1H
		+LoadW r0, dir3Head
		LDY #0
		STY r3L
		STY r2L
		INY
		STY r2H
		JSR StashRAM
		JSR DoClrCache2
ExiTur0 	PLA				;9743
		TAX
		RTS

E9746		!byte $80, $00, $80, $00	;!!!
E974A		!byte $8f, $9d, $aa, $b8

__PurgeTurbo					;974e
		JSR ClearCache
		JSR ExitTurbo
	 	LDY curDrive
		LDA #0
		STA _turboFlags,y
		RTS

DUNK4		STX z8c 			;975d
		STA z8b
		LDY #2
		BNE DUNK4_3
DUNK4_1 	STX z8c 			;9765
		STA z8b
DUNK4_2 	LDY #4				;9769
		LDA r1H
		STA DTrkSec+1
		LDA r1L
		STA DTrkSec
DUNK4_3 	LDA z8c				;9775
		STA DExeProc+1
		LDA z8b
		STA DExeProc
		LDA #>DExeProc
		STA z8c
		LDA #<DExeProc
		STA z8b
		JMP Hst_SendByte

DUNK5		LDY #1				;978a
		JSR Hst_RecvByte
		PHA
		TAY
		JSR Hst_RecvByte
		PLA
		TAY
		RTS

GetSync 	SEI				;9797
		+MoveB TURBO_DD00, cia2base
GetSync0	+bbrf 7, cia2base, GetSync0	;979d
		RTS

__ChangeDiskDevice				;97a6
		STA ChngDskDev_Number
		JSR PurgeTurbo
		JSR InitForIO
		LDX #>ChngDskDev_Command
		LDA #<ChngDskDev_Command
		JSR SendDOSCmd
		+bnex ChngDskDv0
		LDY ChngDskDev_Number
		LDA #0
		STA _turboFlags,y
		STY curDrive
		STY curDevice
		JMP E9685
ChngDskDv0	JMP DoneWithIO			;97c6

ChngDskDev_Command				;97c9
		!text "U0>"
ChngDskDev_Number				;97cc
		!byte 8, 0

__NewDisk					;97ce
		JSR EnterTurbo
		BNE NewDsk2
		JSR ClearCache
		LDA #0
		STA errCount
		STA r1L
		JSR InitForIO
NewDsk0 	LDX #>Drv_NewDisk		;97e0
		LDA #<Drv_NewDisk
		JSR DUNK4_1
		JSR GetDOSError
		BEQ NewDsk1
		INC errCount
		CPY errCount
		BEQ NewDsk1
		BCS NewDsk0
NewDsk1 	JSR DoneWithIO			;97f6
NewDsk2 	RTS				;97f9

DOSErrTab	!byte $01, $05, $02, $08	;97fa
		!byte $08, $01, $05, $01
		!byte $05, $05, $05

NibbleTab	!byte $0f, $07, $0d, $05, $0b, $03, $09, $01	;9805
		!byte $0e, $06, $0c, $04, $0a, $02, $08, $00
NibbleTab2	!byte $05, $85, $25, $a5, $45, $c5, $65, $e5	;9815
		!byte $15, $95, $35, $b5, $55, $d5, $75, $f5
E9825		!byte $05, $25, $05, $25, $15, $35, $15, $35
		!byte $05, $25, $05, $25, $15, $35, $15, $35

Hst_RecvByte	JSR GetSync			;9835
		STY z8d
Hst_RecvByte_0	SEC				;983a
Hst_RecvByte_1	LDA rasreg			;983b
		SBC #$31
		BCC Hst_RecvByte_2
		AND #6
		BEQ Hst_RecvByte_1
Hst_RecvByte_2	+MoveB TURBO_DD00_CPY, cia2base ;9846
		+MoveB TURBO_DD00, cia2base
		DEC z8d
		LDA cia2base
		LSR
		LSR
		NOP
		ORA cia2base
		LSR
		LSR
		LSR
		LSR
		LDY cia2base
		TAX
		TYA
		LSR
		LSR
		ORA cia2base
		AND #%11110000
		ORA NibbleTab,x
		LDY z8d
		STA (z8b),y
		BNE Hst_RecvByte_0
Hst_RecvByte_3 	LDX tmpDD00			;9874
		STX cia2base
		RTS

Hst_SendByte	JSR GetSync			;987b
		TYA
		PHA
		LDY #0
		JSR Hst_SendByte_01
		PLA
		TAY
Hst_SendBt_00	JSR GetSync			;9887
Hst_SendByte_0	DEY				;988a
		LDA (z8b),y
		LDX TURBO_DD00
		STX cia2base
Hst_SendByte_01 TAX				;9892
		AND #%00001111
		STA z8d
		SEC
Hst_SendByte_1	LDA rasreg			;9898
		SBC #$31
		BCC Hst_SendByte_2
		AND #6
		BEQ Hst_SendByte_1
Hst_SendByte_2	TXA				;98a3
		LDX TURBO_DD00_CPY
		STX cia2base
		AND #%11110000
		ORA TURBO_DD00
		STA cia2base
		ROR
		ROR
		AND #%11110000
		ORA TURBO_DD00
		STA cia2base
		LDX z8d
		LDA NibbleTab2,x
		STA cia2base
		LDA E9825,x
		CPY #0
		STA cia2base
		BNE Hst_SendByte_0
		NOP
		NOP
		BEQ Hst_RecvByte_3

_ReadLink					;98cf
		JSR CheckParams_1
		BCC RdLink2
		LDA r1L
		ORA #$80
		STA r1L
		JSR RdBlock0
		LDA r1L
		AND #$7f
		STA r1L
RdLink2		RTS				;98e3

__ReadBlock					;98e4
		JSR CheckParams_1
		BCC RdBlock2
		+bbrf 6, curType, RdBlock0
		JSR DoCacheRead
		BNE RdBlock2
RdBlock0	LDX #>Drv_ReadSec		;98f3
		LDA #<Drv_ReadSec
		JSR DUNK4_1
		LDX #>Drv_SendByte
		LDA #<Drv_SendByte
		JSR DUNK4
		+MoveW r4, z8b
		LDY #0
		LDA r1L
		BPL RdBlock_00
		LDY #2
RdBlock_00	JSR Hst_RecvByte		;9911
		JSR GetDError
		+beqx RdBlock1
		INC errCount
		CPY errCount
		BEQ RdBlock1
		BCS RdBlock0
RdBlock1	+CmpBI r1L, DIR_1581_TRACK			;9924
		BNE RdBlock_2
		LDA r1H
		BNE RdBlock_2
		LDY #4
RdBlock_1	LDA (r4),y			;9930
		STA E9C63
		TYA
		+addv $8c
		TAY
		LDA (r4),y
		PHA
		LDA E9C63
		STA (r4),y
		TYA
		+subv $8c
		TAY
		PLA
		STA (r4),y
		INY
		CPY #$1d
		BNE RdBlock_1
RdBlock_2	+bnex RdBlock2			;9924
		+bbrf 6, curType, RdBlock2
		JSR DoCacheWrite
		+bra RdBlock2
RdBlock2	LDY #0				;995d
		RTS

__WriteBlock					;9960
		JSR CheckParams
		BCC WrBlock3
		JSR RdBlock1
WrBlock1	LDX #>Drv_WriteSec		;9968
		LDA #<Drv_WriteSec
		JSR DUNK4_1
		+MoveW r4, z8b
		LDY #0
		JSR Hst_SendBt_00
		JSR GetDError
		BEQ WrBlock2
		INC errCount
		CPY errCount
WrBlock_1	BEQ WrBlock2			;9987
		BCS WrBlock1
WrBlock2	JSR RdBlock1			;998b
WrBlock3	RTS				;998e

__VerWriteBlock 				;998f
		LDX #0
		+bbrf 6, curType, VWrBlock3
		JMP DoCacheWrite
VWrBlock3	RTS				;9886

GetDOSError	LDX #>Drv_SendByte_1		;999a
		LDA #<Drv_SendByte_1
		JSR DUNK4
GetDError	LDA #>errStore			;99a1
		STA z8c
		LDA #<errStore
		STA z8b
		JSR DUNK5
		LDA errStore
		PHA
		TAY
		LDA DOSErrTab-1,y
		TAY
		PLA
		CMP #0
		BEQ GetDErr1
		CMP #1
		BEQ GetDErr1
		+addv $1e
		BNE GetDErr2
GetDErr1	LDA #0				;99c3
GetDErr2	TAX				;98c5
		RTS

DriveCode					;99c7
		!pseudopc DriveAddy {			; MEGA65_FIXED: !pseudopc now takes compound asm

DNibbleTab	!byte $0f, $07, $0d, $05	;0300
		!byte $0b, $03, $09, $01
		!byte $0e, $06, $0c, $04
		!byte $0a, $02, $08

DNibbleTab2	!byte $00, $80, $20, $a0	;030f
		!byte $40, $c0, $60, $e0
		!byte $10, $90, $30, $b0
		!byte $50, $d0, $70, $f0
Drv_SendByte					;031f
		LDY #0
		LDA E04EB
		BPL E0328
		LDY #2
E0328		JSR E0362			;0328
Drv_SendByte_1	LDA #>$0500			;032b
		STA $7e
		LDY #0
		STY $7f
		INY
		JSR E0354
		JSR E046A
		CLI
E033B		LDA E04E8			;033b
		BEQ E034B
		DEX
		BNE E034B
		DEC E04E8
		BNE E034B
;!!!E034A=*+2
		JSR E04BE
E034B		LDA #4				;034b
		BIT $4001
		BNE E033B
		SEI
		RTS

E0354		STY $42				;0354
		LDY #0
		JSR E0402
		LDA $42
		JSR E0368
		LDY $42
E0362		JSR E0402			;0362
E0365		DEY				;0365
		LDA ($7e),y
E0368		TAX				;0368
		LSR
		LSR
		LSR
E036c		LSR				;036c
		STA $41
		TXA
		AND #%00001111
		TAX
		LDA #4
		STA $4001
		BIT $4001
		BEQ *-3
		NOP
		NOP
		NOP
		NOP
		STX $4001
		JSR E0401
		TXA
		ROL
		AND #%00001111
		STA $4001
E038E		PHP				;038e
		PLP
		NOP
		NOP
		NOP
		LDX $41
		LDA DNibbleTab,x
		STA $4001
		JSR E0400
		ROL
		AND #%00001111
		CPY #0
		STA $4001
		BNE E0365
		JSR E03FB
		BEQ E03ED
E03AD		JSR E0402			;03ad
		JSR E03FB
		LDA #0
		STA $41
E03B7		EOR $41				;03b7
		STA $41
		JSR E03FC
		LDA #4
		BIT $4001
		BEQ *-3
		JSR E03FD
		LDA $4001
		JSR E03FC
		ASL
		ORA $4001
		PHP
		PLP
		NOP
		NOP
		AND #%00001111
		TAX
		LDA $4001
		JSR E03FF
		ASL
		ORA $4001
		AND #%00001111
		ORA DNibbleTab2,x
		DEY
		STA ($7e),y
		BNE E03B7
E03ED		LDX #2				;03ed
		STX $4001
		PHP
		PLP
		PHP
		PLP
		PHP
		PLP
		PHP
		PLP
		NOP
E03FB		NOP
E03FC		NOP
E03FD		NOP
		NOP
E03FF		NOP
E0400		NOP
E0401		RTS

E0402		LDA #4				;0402
		BIT $4001
		BNE E0402
		LDA #0
		STA $4001
		RTS

DriveStart					;040f
		SEI
		+PushB $41
		+PushB $42
		+PushW $7e
		LDX #2
		LDY #0
E0420		DEY				;0420
		BNE E0420
		DEX
		BNE E0420
		JSR E03ED
		LDA #4
		BIT $4001
		BEQ *-3
E0430		LDA #>E04E9
		STA $7f
		LDA #<E04E9
		STA $7e
		LDY #1
		JSR E03AD
		STA $42
		TAY
		JSR E03AD
		JSR E046E
		+LoadW $7e, $0600
		LDA #>E0430-1
		PHA
		LDA #<E0430-1
		PHA
		JMP ($04E9)

E0457		JSR E0402			;0457 ;!!! ExitTurbo
		PLA
		PLA
		+PopW $7e
		+PopB $42
		+PopB $41
		CLI
		RTS

E046A		LDA #$BF			;046a
		BNE E0475
E046E		LDA #$40			;046e
		ORA $4000
		BNE E0478
E0475		AND $4000			;0475
E0478		STA $4000			;0478
		RTS

Drv_WriteSec	JSR E04B0			;047c
		LDY #0
		JSR E03AD
		LDA #$B6
		JSR E04D1
		LDA $05
		STA $01FA
		BNE E0498
		LDA #$90
		STA E04E8
		JSR E04D1
E0498		JMP Drv_SendByte_1		;0498

Drv_NewDisk	JSR Drv_ExitTurbo		;049b
		LDA #$92
		JSR E04D1
		LDA $05
		CMP #1
		BCC E04AC
		BEQ E04AC
		RTS
E04AC		LDA #$B0			;04ac
		BNE E04D1
E04B0		LDA E04EB			;04b0
		AND #$7f
		CMP $11
		BEQ E04E6
Drv_ExitTurbo	LDA E04E8			;04b9
		BEQ E04E6
E04BE		LDX #3
		JSR $ff6c
		LDA #0
		STA E04E8
		LDA #$86
		BNE E04D1
Drv_ReadSec	JSR E04B0			;04cc
		LDA #$80
E04D1		STA $05
		LDA E04EB
		AND #$7f
		STA $11
		LDA E04EC
		STA $12
		LDX #3
		LDA $2,x
		JSR $ff54
E04E6		RTS				;04e6

		!byte 0
E04E8		!byte 0
E04E9		!byte 0, 0
E04EB		=*
E04EC		=*+1
;04ed
; MEGA65_FIXED: !realpc obsolete now with !pseudopc compound asm ( {} )
};		!realpc
;9bb2
ClrCacheDat	!word 0				;9bb2

ClearCache	+bbsf 6, curType, DoClearCache	;9bb4
		RTS
DoClearCache	JSR E9C4A			;9bba
		+LoadW r0, ClrCacheDat		;9c0f
		LDA #0
		STA r1L
		STA r1H
		STA r2H
		LDA #2
		STA r2L
		LDY curDrive
		LDA driveData,y
		STA r3L
DoClrCache1	JSR StashRAM			;9bd9
		INC r1H
		BNE DoClrCache1
DoClrCache2	LDX #8				;9be0
DoClrCache3	LDA E9C63-1,x			;9be2
		STA r0L-1,x
		DEX
		BNE DoClrCache3
		RTS

DoCacheVerify	LDA r1L				;9beb
		CMP #DIR_1581_TRACK
		BNE E9BF9
		LDY #$93			;9bf1
		JSR DoCacheDisk
		AND #$20
		RTS
E9BF9		LDX #0				;9bf9
		LDA #$ff
		RTS

DoCacheRead	LDA r1L				;9bfe
		CMP #DIR_1581_TRACK
		BNE GiveNoError
		LDY #%10010001			;9bfe
		JSR DoCacheDisk
		LDY #0
		LDA (r4),y
		INY
		ORA (r4),y
		RTS
GiveNoError	LDX #0				;9c11
		RTS

DoCacheWrite	LDA r1L				;9c14
		CMP #DIR_1581_TRACK
		BNE E9C1E
		LDY #%10010000
		BNE DoCacheDisk
E9C1E		LDX #0				;9c1e
		RTS
DoCacheDisk	JSR E9C4A			;9c21
		TYA
		PHA
		LDY curDrive
		LDA driveData,y
		STA r3L
		LDY #0
		STY r1L
		STY r2L
		INY
		STY r2H
		+MoveW r4, r0
		PLA
		TAY
		JSR DoRAMOp
		TAY
		JSR DoClrCache2
		TYA
		RTS

E9C4A		LDX #8				;9c4a
E9C4C		LDA r0L-1,x			;9c4c
		STA E9C63-1,x
		DEX
		BNE E9C4C
		RTS

tmpclkreg	!byte 0				;9c55
tmpPS		!byte 0				;9c56
tmpgrirqen	!byte 0				;9c57
tmpCPU_DATA	!byte 0				;9c58
tmpmobenble	!byte 0				;9c59
		!byte 0				;9c5a
DExeProc	!word 0				;9c5b
DTrkSec		!word 0				;9c5d
tmpDD00		!byte 0				;9c5f
errCount	!byte 0				;9c60
errStore	!byte 0				;9c61
tmpDriveType	!byte 0				;9c62
E9C63		!byte 0				;9c63
E9C64		!byte 0				;9c64
borderFlag	!byte 0				;9c65
